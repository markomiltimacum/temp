// SPDX-License-Identifier: MIT



pragma solidity ^0.8.0;

import "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol";
import "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol";

contract NFT1155 is ERC1155, Ownable {

  address public vlasnik;

  mapping(address => bool) public partneri;
  mapping(uint => string) public tokenURI;


  constructor(address partner) ERC1155("") {
    partneri[partner]=true;
    vlasnik = msg.sender;
  }

  function addpartnermember(address add) public {
    partneri[add]=true;
  }

  function mint(address _to, uint _id, uint _amount) external  {
    require (partneri[msg.sender], "Nisi partnerska");
    _mint(_to, _id, _amount, "");
  }

  function setURI(uint _id, string memory _uri) external onlyOwner {
    tokenURI[_id] = _uri;
  }

 function uri(uint _id) public override view returns (string memory) {
    return tokenURI[_id];
  }
}


contract factory is Ownable{
  
    address[] public child_addresses;
   
    function napravinovi(address partadr) public onlyOwner {
        NFT1155 _child = new NFT1155(partadr);
        child_addresses.push(address(_child));
    }
}
  
